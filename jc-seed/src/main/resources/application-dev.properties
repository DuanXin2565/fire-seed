# 开发环境配置
# 数据源配置，请修改为你项目的实际配置
# springboot版本依赖的mysql-connect-java的版本不同。2.3.2版本的mysql-connect的版本超过6.0，在配置时需要在后面添加时区。
spring.datasource.url=jdbc:mysql://localhost:3306/hydranttest?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#jdbc.driver=com.mysql.jdbc.Driver
#jdbc.userDto=root
#jdbc.password=password
#jdbc.url=jdbc:mysql://localhost:3306/hydranttest?useUnicode=true&characterEncoding=utf-8&useSSL=false


## Redis 配置
## Redis数据库索引（默认为0）
spring.redis.database=0
## Redis服务器地址
spring.redis.host=127.0.0.1
## Redis服务器连接端口
spring.redis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.timeout=0


# 配置日志输出
logging.config: classpath:log4j2.xml

spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false
